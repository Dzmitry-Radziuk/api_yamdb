import random
import string

from django.conf import settings
from django.contrib.auth.hashers import make_password
from django.core.mail import send_mail
from rest_framework.exceptions import ValidationError

from users.constants import ROLE_CHOICES


def generate_confirmation_code(length=6):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."""
    return ''.join(random.choices(string.digits, k=length))


def send_confirmation_email(email, confirmation_code):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email —Å –∫–æ–¥–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (—Å –ª–æ–≥–æ–º)."""
    print(f'üìß Sending confirmation email to {email}: {confirmation_code}')
    send_mail(
        '–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
        f'–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {confirmation_code}',
        settings.DEFAULT_FROM_EMAIL,
        [email],
        fail_silently=False,
    )


def validate_role(role):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ä–æ–ª—å –¥–æ–ø—É—Å—Ç–∏–º–æ–π."""
    if role not in dict(ROLE_CHOICES):
        raise ValidationError("–ü–µ—Ä–µ–¥–∞–Ω–∞ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å.")
    return role


def check_required_fields(data, fields):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –≤ data.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –æ—à–∏–±–æ–∫ –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª–µ–π.
    """
    errors = {}
    for field in fields:
        if not data.get(field):
            errors[field] = ['–≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.']
    return errors


def prepare_user_creation_data(data, default_role):
    """
    –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
    - –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ —Ä–æ–ª—å, –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –µ—ë;
    –∏–Ω–∞—á–µ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
    - –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—É—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å.
    - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç confirmation_code, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω.
    """
    data = data.copy()
    role = data.get("role", default_role)
    if "role" in data:
        validate_role(role)
    data['role'] = role
    data['password'] = make_password(None)
    data.setdefault('confirmation_code', generate_confirmation_code())
    return data
